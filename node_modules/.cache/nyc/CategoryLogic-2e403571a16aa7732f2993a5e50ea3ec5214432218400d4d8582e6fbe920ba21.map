{"version":3,"sources":["CategoryLogic.js"],"names":["getByCategory","category","products","ProductDao","getAllProducts","then","response","getProductsByCategory","toReadableCategories","categories","formattedCategories","forEach","formattedCategory","replace","toLowerCase","charAt","toUpperCase","slice","push"],"mappings":";;;;;;;AAAA;;;;;;;;SAEeA,a;;;;;2EAAf,iBAA6BC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,YAAAA,QAFR,GAEmB,EAFnB;;AAAA,kBAGOD,QAAQ,IAAI,KAHnB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIcE,uBAAWC,cAAX,GACHC,IADG,CACE,UAACC,QAAD,EAAc;AACfJ,cAAAA,QAAQ,GAAGI,QAAX;AACJ,aAHG,CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAUcH,uBAAWI,qBAAX,CAAiCN,QAAjC,EACHI,IADG,CACE,UAACC,QAAD,EAAc;AACjBJ,cAAAA,QAAQ,GAAGI,QAAX;AACJ,aAHK,CAVd;;AAAA;AAAA,6CAeWJ,QAfX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,SAASM,oBAAT,CAA8BC,UAA9B,EAA0C;AAEtC,MAAIC,mBAAmB,GAAG,EAA1B;AACAD,EAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAV,QAAQ,EAAI;AAC3B;AACA,QAAIW,iBAAiB,GAAGX,QAAQ,CAACY,OAAT,CAAiB,IAAjB,EAAsB,GAAtB,EACnBC,WADmB,EAAxB,CAF2B,CAK3B;;AACAF,IAAAA,iBAAiB,GAAGA,iBAAiB,CAChCG,MADe,CACR,CADQ,EACLC,WADK,KAEdJ,iBAAiB,CAACK,KAAlB,CAAwB,CAAxB,CAFN;AAIAP,IAAAA,mBAAmB,CAACQ,IAApB,CAAyBN,iBAAzB;AACH,GAXD;AAYA,SAAOF,mBAAP;AACH,C,CAEA;AACD;;;eAEe;AACXV,EAAAA,aAAa,EAAbA,aADW;AAEXQ,EAAAA,oBAAoB,EAApBA;AAFW,C","sourceRoot":"C:\\Users\\Tjerk_2\\Desktop\\S4 - Vue FrontEnd\\logic\\","sourcesContent":["import ProductDao from '@/data/productdao.js';\r\n\r\nasync function getByCategory(category) {\r\n\r\n    let products = [];\r\n    if(category == 'All') {\r\n        await ProductDao.getAllProducts()\r\n          .then((response) => {\r\n               products = response;\r\n          });\r\n    }   \r\n    else {\r\n        await ProductDao.getProductsByCategory(category)\r\n          .then((response) => {  \r\n             products = response;\r\n        });\r\n    }\r\n    return products;\r\n}\r\n\r\nfunction toReadableCategories(categories) {\r\n\r\n    let formattedCategories = [];\r\n    categories.forEach(category => {\r\n        // replace _ with JS global regex to 'space' and set all chars to lowercase\r\n        let formattedCategory = category.replace(/_/g,' ')\r\n            .toLowerCase();\r\n        \r\n        // first char to uppercase\r\n        formattedCategory = formattedCategory\r\n            .charAt(0).toUpperCase()\r\n            + formattedCategory.slice(1);\r\n\r\n        formattedCategories.push(formattedCategory);\r\n    });\r\n    return formattedCategories;\r\n}\r\n\r\n //replace all +'s with spaces ([] eg [+] for calculating symbols)\r\n// = string.replace(/[+]/g, \" \");\r\n\r\nexport default {\r\n    getByCategory,\r\n    toReadableCategories,\r\n}"]}