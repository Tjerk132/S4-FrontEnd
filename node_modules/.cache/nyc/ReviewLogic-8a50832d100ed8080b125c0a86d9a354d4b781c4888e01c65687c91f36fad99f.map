{"version":3,"sources":["ReviewLogic.js"],"names":["ReviewLogic","reviewDao","ReviewDao","categoryLogic","CategoryLogic","item","array","index","indexOf","splice","string","proconCount","trim","refs","message","forEach","ref","name","value","id","getAllReviewsByProduct","reviews","map","x","reviewAuthorValue","toReadableCategory","review","addReview","userId","reviewId","likeReview"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;IAEqBA,W;AAEjB,yBAAc;AAAA;;AACV,SAAKC,SAAL,GAAiB,IAAIC,qBAAJ,EAAjB;AACA,SAAKC,aAAL,GAAqB,IAAIC,yBAAJ,EAArB;AACH;;;;+BAEUC,I,EAAMC,K,EAAO;AAEpB,UAAIC,KAAK,GAAGD,KAAK,CAACE,OAAN,CAAcH,IAAd,CAAZ,CAFoB,CAIpB;;AACA,aAAOC,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACG,MAAN,CAAaF,KAAb,EAAoB,CAApB,CAAb,CAAP;AACH;;;wCAEmBG,M,EAAQC,W,EAAa;AACrC;AACA,UAAGD,MAAM,CAACE,IAAP,EAAH,EAAkB;AACd,YAAGD,WAAW,IAAI,CAAlB,EAAqB;AACjB,iBAAO,KAAP;AACH,SAFD,MAGK,OAAO,IAAP;AACR,OALD,MAMK,OAAO,KAAP;AACR;;;yCAEoBE,I,EAAM;AAEvB;AACA,UAAIC,OAAJ;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,GAAG,EAAI;AAChB,YAAGA,GAAG,CAACC,IAAJ,KAAa,aAAhB,EAA+B;AAE3B,cAAGD,GAAG,CAACE,KAAJ,GAAY,CAAZ,IAAiBF,GAAG,CAACE,KAAJ,GAAY,CAAhC,EAAmC;AAC/BJ,YAAAA,OAAO,GAAE,6BAAT;AACH;AACJ,SALD,MAMK,IAAG,CAACE,GAAG,CAACE,KAAL,IAAc,CAACF,GAAG,CAACE,KAAJ,CAAUN,IAAV,EAAlB,EAAoC;AACrCE,UAAAA,OAAO,GAAG,wBAAwBE,GAAG,CAACC,IAA5B,GAAmC,QAA7C;AACH;AACJ,OAVD;AAWA,aAAOH,OAAP;AACH;;;;6GAE4BK,E;;;;;;;;;uBACL,KAAKlB,SAAL,CAAemB,sBAAf,CAAsCD,EAAtC,C;;;AAAhBE,gBAAAA,O;AAEJ;AACAA,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,iBAAF,GAAsBD,CAAC,CAACC,iBAAF,CAAoBA,iBAA9C;AAAA,iBAAb;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,iBAAF,GAAsB,KAAI,CAACrB,aAAL,CAAmBsB,kBAAnB,CAAsCF,CAAC,CAACC,iBAAxC,CAA1B;AAAA,iBAAb;iDAEOH,O;;;;;;;;;;;;;;;;;;;iGAGKK,M;;;;;;uBACC,KAAKzB,SAAL,CAAe0B,SAAf,CAAyBD,MAAzB,C;;;;;;;;;;;;;;;;;;;;;;kGAGAE,M,EAAQC,Q;;;;;;uBACR,KAAK5B,SAAL,CAAe6B,UAAf,CAA0BF,MAA1B,EAAkCC,QAAlC,C","sourceRoot":"C:\\Users\\Tjerk_2\\Desktop\\S4 - Vue FrontEnd\\logic\\","sourcesContent":["import ReviewDao from '@/data/ReviewDao.js';\r\n\r\nimport CategoryLogic from '@/logic/CategoryLogic.js';\r\n\r\nexport default class ReviewLogic {\r\n\r\n    constructor() {\r\n        this.reviewDao = new ReviewDao();\r\n        this.categoryLogic = new CategoryLogic();\r\n    }\r\n\r\n    removeItem(item, array) {\r\n\r\n        var index = array.indexOf(item);\r\n\r\n        //remove first occurance\r\n        return array.splice(array.splice(index, 1));\r\n    }\r\n\r\n    validateProConInput(string, proconCount) {\r\n        //input is not blank or whitespace\r\n        if(string.trim()) {\r\n            if(proconCount >= 4) {\r\n                return false;\r\n            }\r\n            else return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    validateReviewSubmit(refs) {\r\n\r\n        //validate no empty fields \r\n        let message; \r\n        refs.forEach(ref => {\r\n            if(ref.name === 'Star Rating') {\r\n\r\n                if(ref.value < 1 || ref.value > 5) {\r\n                    message ='Please insert a star rating';\r\n                }\r\n            }\r\n            else if(!ref.value || !ref.value.trim()) {\r\n                message = 'Please fill in the ' + ref.name + ' field';\r\n            }\r\n        });\r\n        return message;\r\n    }\r\n\r\n    async getAllReviewsByProduct(id) {\r\n        let reviews = await this.reviewDao.getAllReviewsByProduct(id);\r\n\r\n        //review author value is saved as enum object\r\n        reviews.map(x => x.reviewAuthorValue = x.reviewAuthorValue.reviewAuthorValue);\r\n        reviews.map(x => x.reviewAuthorValue = this.categoryLogic.toReadableCategory(x.reviewAuthorValue));\r\n\r\n        return reviews;\r\n    }\r\n\r\n    async addReview(review) {\r\n        return await this.reviewDao.addReview(review);\r\n    }\r\n\r\n    async likeReview(userId, reviewId) {\r\n        return await this.reviewDao.likeReview(userId, reviewId);\r\n    }\r\n}  "]}