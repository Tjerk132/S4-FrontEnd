{"version":3,"sources":["CategoryLogic.js"],"names":["CategoryLogic","ProductDao","category","products","getAllProducts","response","toRestCategory","getProductsByCategory","map","x","toReadableCategory","formattedCategory","replace","toLowerCase","charAt","toUpperCase","slice"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,a;AAEjB,2BAAc;AAAA;;AACV,SAAKC,UAAL,GAAkB,IAAIA,sBAAJ,EAAlB;AACH;;;;;oGAEmBC,Q;;;;;;;;;AAEZC,gBAAAA,Q,GAAW,E;;sBACZD,QAAQ,IAAI,K;;;;;;uBACU,KAAKD,UAAL,CAAgBG,cAAhB,E;;;AAAjBC,gBAAAA,Q;AACJF,gBAAAA,QAAQ,GAAGE,QAAX;;;;;AAGAH,gBAAAA,QAAQ,GAAG,KAAKI,cAAL,CAAoBJ,QAApB,CAAX;;uBACqB,KAAKD,UAAL,CAAgBM,qBAAhB,CAAsCL,QAAtC,C;;;AAAjBG,gBAAAA,S;AACJF,gBAAAA,QAAQ,GAAGE,SAAX;;;AAEJ;AACAF,gBAAAA,QAAQ,CAACK,GAAT,CAAa,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACP,QAAF,GAAa,KAAI,CAACQ,kBAAL,CAAwBD,CAAC,CAACP,QAAF,CAAWA,QAAnC,CAAjB;AAAA,iBAAd;iDAEOC,Q;;;;;;;;;;;;;;;;;;uCAGQD,Q,EAAU;AAEzB;AACA,UAAIS,iBAAiB,GAAGT,QAAQ,CAACU,OAAT,CAAiB,IAAjB,EAAsB,GAAtB,EACnBC,WADmB,EAAxB,CAHyB,CAMzB;;AACAF,MAAAA,iBAAiB,GAAGA,iBAAiB,CAChCG,MADe,CACR,CADQ,EACLC,WADK,KAEdJ,iBAAiB,CAACK,KAAlB,CAAwB,CAAxB,CAFN;AAIA,aAAOL,iBAAP;AACH;;;mCAEcT,Q,EAAU;AACrB,aAAOA,QAAQ,CAACU,OAAT,CAAiB,IAAjB,EAAsB,GAAtB,EACNG,WADM,EAAP;AAEH","sourceRoot":"C:\\Users\\Tjerk_2\\Desktop\\S4 - Vue FrontEnd\\logic\\","sourcesContent":["import ProductDao from '@/data/ProductDao.js';\r\n\r\nexport default class CategoryLogic {\r\n\r\n    constructor() {\r\n        this.ProductDao = new ProductDao();\r\n    }\r\n\r\n    async getByCategory(category) {\r\n\r\n        let products = [];\r\n        if(category == 'All') {\r\n            let response = await this.ProductDao.getAllProducts()\r\n            products = response;\r\n        }   \r\n        else {\r\n            category = this.toRestCategory(category);\r\n            let response = await this.ProductDao.getProductsByCategory(category)\r\n            products = response;\r\n        }\r\n        //category is saved as enum object\r\n        products.map(x => x.category = this.toReadableCategory(x.category.category));\r\n        \r\n        return products;\r\n    }\r\n\r\n    toReadableCategory(category) {\r\n                    \r\n        // replace _ with JS global regex to 'space' and set all chars to lowercase\r\n        let formattedCategory = category.replace(/_/g,' ')\r\n            .toLowerCase();\r\n        \r\n        // first char to uppercase\r\n        formattedCategory = formattedCategory\r\n            .charAt(0).toUpperCase()\r\n            + formattedCategory.slice(1);\r\n\r\n        return formattedCategory;\r\n    }\r\n\r\n    toRestCategory(category) {                     \r\n        return category.replace(/ /g,'_')\r\n        .toUpperCase();    \r\n    }\r\n}"]}