{"version":3,"sources":["ReviewSummaryLogic.js"],"names":["ReviewSummaryItem","require","getAvgRating","reviews","totalRating","forEach","review","starRating","length","toFixed","calculatePercentages","maxRating","reviewCount","reviewSummary","i","count","filter","x","push","calculateRatingPercentages","percentage","quantity","module","exports"],"mappings":";;AAAA,IAAMA,iBAAiB,GAAGC,OAAO,kCAAjC;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAE3B,MAAIC,WAAW,GAAG,CAAlB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtBF,IAAAA,WAAW,IAAIE,MAAM,CAACC,UAAtB;AACH,GAFD;AAGA,SAAO,CAACH,WAAW,GAAGD,OAAO,CAACK,MAAvB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAP;AACH;;AAED,SAASC,oBAAT,CAA8BC,SAA9B,EAAyCR,OAAzC,EAAkDS,WAAlD,EAA+D;AAC3D,MAAIC,aAAa,GAAG,EAApB;;AAD2D,6BAEnDC,CAFmD;AAIvD,QAAIC,KAAK,GAAGZ,OAAO,CAACa,MAAR,CAAe,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACV,UAAF,IAAgBO,CAApB;AAAA,KAAhB,EAAuCN,MAAnD;AACAK,IAAAA,aAAa,CAACK,IAAd,CAAmB,IAAIlB,iBAAJ,CAAsBc,CAAtB,EAAyBC,KAAzB,CAAnB;AALuD;;AAE3D,OAAI,IAAID,CAAC,GAAGH,SAAZ,EAAuBG,CAAC,GAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AAAA,UAA3BA,CAA2B;AAIlC;;AACDD,EAAAA,aAAa,GAAGM,0BAA0B,CAACN,aAAD,EAAgBD,WAAhB,CAA1C;AACA,SAAOC,aAAP;AACH,C,CAED;;;AACA,SAASM,0BAAT,CAAoCN,aAApC,EAAmDD,WAAnD,EAAgE;AAE5DC,EAAAA,aAAa,CAACR,OAAd,CAAsB,UAAAL,iBAAiB,EAAI;AACvC,QAAIoB,UAAU,GAAIpB,iBAAiB,CAACqB,QAAlB,GAA6BT,WAA9B,GAA6C,GAA9D;AACAZ,IAAAA,iBAAiB,CAACoB,UAAlB,GAA+BA,UAA/B;AACH,GAHD;AAIA,SAAOP,aAAP;AACH;;AAEDS,MAAM,CAACC,OAAP,GAAiB;AACbrB,EAAAA,YAAY,EAAZA,YADa;AAEbQ,EAAAA,oBAAoB,EAApBA;AAFa,CAAjB","sourceRoot":"C:\\Users\\Tjerk_2\\Desktop\\S4 - Vue FrontEnd\\logic\\","sourcesContent":["const ReviewSummaryItem = require('@/models/ReviewSummaryItem.js');\r\n\r\nfunction getAvgRating(reviews) {\r\n\r\n    let totalRating = 0;\r\n    reviews.forEach(review => {\r\n        totalRating += review.starRating;\r\n    });\r\n    return (totalRating / reviews.length).toFixed(1);\r\n}\r\n\r\nfunction calculatePercentages(maxRating, reviews, reviewCount) {\r\n    let reviewSummary = [];\r\n    for(let i = maxRating; i > 0; i--) {\r\n\r\n        let count = reviews.filter(x => x.starRating == i).length;\r\n        reviewSummary.push(new ReviewSummaryItem(i, count));\r\n    }\r\n    reviewSummary = calculateRatingPercentages(reviewSummary, reviewCount);\r\n    return reviewSummary;\r\n}\r\n\r\n//private\r\nfunction calculateRatingPercentages(reviewSummary, reviewCount) {\r\n\r\n    reviewSummary.forEach(ReviewSummaryItem => {\r\n        let percentage = (ReviewSummaryItem.quantity / reviewCount) * 100;\r\n        ReviewSummaryItem.percentage = percentage;\r\n    });\r\n    return reviewSummary;\r\n}\r\n\r\nmodule.exports = {\r\n    getAvgRating,\r\n    calculatePercentages,\r\n}"]}